import { AppHeader } from '@/components/AppHeader'
import { ArticlesList } from '@/components/ArticlesList'
import { ArticlesProvider } from '@/components/ArticlesProvider';
import { FilteringProvider } from '@/components/FilteringProvider';
import { Article } from '@/types/article';
import Head from 'next/head';
import styled from 'styled-components';

const ARTICLES_URL = 'https://react-challenge.human.hr/last-100-news.json';

interface Props {
  articles: Article[];
}

const AppContainer = styled.div`
  width: 100%;
  height: 100vh;
  max-width: 960px;
  margin: 0 auto;

  display: flex;
  flex-direction: column;
`

export default function Home(props: Props) {
  const { articles } = props;

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link rel="preconnect" href="https://fonts.gstatic.com" crossOrigin='' />
        <link href="https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,400;0,700;1,400;1,700&display=swap" rel="stylesheet" />
      </Head>
      <main>
        <FilteringProvider>
          <ArticlesProvider initialArticles={articles}>
            <AppContainer>
              <AppHeader />
              <ArticlesList />
            </AppContainer>
          </ArticlesProvider>
        </FilteringProvider>
      </main>
    </>
  )
}

export async function getServerSideProps() {
  const response = await fetch(ARTICLES_URL);

  const articles = await response.json();

  return {
    props: {
      articles: articles.map((article: any) => (
        {
          title: article.title,
          slug: article.slug,
          postCategoryId: article['post_category_id'],
          postImage: article['post_image'],
          postThumbnail: article['post_thumbnail'],
          excerpt: article.excerpt,
          date: article.date
        }
      ))
    }
  }
}
